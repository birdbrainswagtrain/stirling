#[allow(non_camel_case_types)]
#[derive(Debug, Copy, Clone)]
#[repr(u16)]
pub enum Instr {
    I8_Const(u32, i8),
    I8_Mov(u32, u32),
    I8_Neg(u32, u32),
    I8_Not(u32, u32),
    I8_Eq(u32, u32, u32),
    I8_NotEq(u32, u32, u32),
    I8_Add(u32, u32, u32),
    I8_Sub(u32, u32, u32),
    I8_Mul(u32, u32, u32),
    I8_Or(u32, u32, u32),
    I8_And(u32, u32, u32),
    I8_Xor(u32, u32, u32),
    I8_ShiftL(u32, u32, u32),
    I8_S_Lt(u32, u32, u32),
    I8_S_LtEq(u32, u32, u32),
    I8_S_Div(u32, u32, u32),
    I8_S_Rem(u32, u32, u32),
    I8_S_ShiftR(u32, u32, u32),
    I8_U_Lt(u32, u32, u32),
    I8_U_LtEq(u32, u32, u32),
    I8_U_Div(u32, u32, u32),
    I8_U_Rem(u32, u32, u32),
    I8_U_ShiftR(u32, u32, u32),

    I16_Const(u32, i16),
    I16_Mov(u32, u32),
    I16_Neg(u32, u32),
    I16_Not(u32, u32),
    I16_Eq(u32, u32, u32),
    I16_NotEq(u32, u32, u32),
    I16_Add(u32, u32, u32),
    I16_Sub(u32, u32, u32),
    I16_Mul(u32, u32, u32),
    I16_Or(u32, u32, u32),
    I16_And(u32, u32, u32),
    I16_Xor(u32, u32, u32),
    I16_ShiftL(u32, u32, u32),
    I16_S_Lt(u32, u32, u32),
    I16_S_LtEq(u32, u32, u32),
    I16_S_Div(u32, u32, u32),
    I16_S_Rem(u32, u32, u32),
    I16_S_ShiftR(u32, u32, u32),
    I16_U_Lt(u32, u32, u32),
    I16_U_LtEq(u32, u32, u32),
    I16_U_Div(u32, u32, u32),
    I16_U_Rem(u32, u32, u32),
    I16_U_ShiftR(u32, u32, u32),

    I32_Const(u32, i32),
    I32_Mov(u32, u32),
    I32_Neg(u32, u32),
    I32_Not(u32, u32),
    I32_Eq(u32, u32, u32),
    I32_NotEq(u32, u32, u32),
    I32_Add(u32, u32, u32),
    I32_Sub(u32, u32, u32),
    I32_Mul(u32, u32, u32),
    I32_Or(u32, u32, u32),
    I32_And(u32, u32, u32),
    I32_Xor(u32, u32, u32),
    I32_ShiftL(u32, u32, u32),
    I32_S_Lt(u32, u32, u32),
    I32_S_LtEq(u32, u32, u32),
    I32_S_Div(u32, u32, u32),
    I32_S_Rem(u32, u32, u32),
    I32_S_ShiftR(u32, u32, u32),
    I32_U_Lt(u32, u32, u32),
    I32_U_LtEq(u32, u32, u32),
    I32_U_Div(u32, u32, u32),
    I32_U_Rem(u32, u32, u32),
    I32_U_ShiftR(u32, u32, u32),

    I64_Const(u32, i64),
    I64_Mov(u32, u32),
    I64_Neg(u32, u32),
    I64_Not(u32, u32),
    I64_Eq(u32, u32, u32),
    I64_NotEq(u32, u32, u32),
    I64_Add(u32, u32, u32),
    I64_Sub(u32, u32, u32),
    I64_Mul(u32, u32, u32),
    I64_Or(u32, u32, u32),
    I64_And(u32, u32, u32),
    I64_Xor(u32, u32, u32),
    I64_ShiftL(u32, u32, u32),
    I64_S_Lt(u32, u32, u32),
    I64_S_LtEq(u32, u32, u32),
    I64_S_Div(u32, u32, u32),
    I64_S_Rem(u32, u32, u32),
    I64_S_ShiftR(u32, u32, u32),
    I64_U_Lt(u32, u32, u32),
    I64_U_LtEq(u32, u32, u32),
    I64_U_Div(u32, u32, u32),
    I64_U_Rem(u32, u32, u32),
    I64_U_ShiftR(u32, u32, u32),

    I128_Const(u32, i64),
    I128_Mov(u32, u32),
    I128_Neg(u32, u32),
    I128_Not(u32, u32),
    I128_Eq(u32, u32, u32),
    I128_NotEq(u32, u32, u32),
    I128_Add(u32, u32, u32),
    I128_Sub(u32, u32, u32),
    I128_Mul(u32, u32, u32),
    I128_Or(u32, u32, u32),
    I128_And(u32, u32, u32),
    I128_Xor(u32, u32, u32),
    I128_ShiftL(u32, u32, u32),
    I128_S_Lt(u32, u32, u32),
    I128_S_LtEq(u32, u32, u32),
    I128_S_Div(u32, u32, u32),
    I128_S_Rem(u32, u32, u32),
    I128_S_ShiftR(u32, u32, u32),
    I128_U_Lt(u32, u32, u32),
    I128_U_LtEq(u32, u32, u32),
    I128_U_Div(u32, u32, u32),
    I128_U_Rem(u32, u32, u32),
    I128_U_ShiftR(u32, u32, u32),

    I128_ConstHigh(u32, i64),

    I64_S_Widen_32(u32, u32),
    I64_U_Widen_32(u32, u32),
    I64_S_Widen_16(u32, u32),
    I64_U_Widen_16(u32, u32),
    I64_S_Widen_8(u32, u32),
    I64_U_Widen_8(u32, u32),

    Jump(i32),
    JumpF(i32, u32),

    Return,
    Bad,

    BuiltIn_print_int(u32),
    BuiltIn_print_uint(u32),
    BuiltIn_print_bool(u32),
}
