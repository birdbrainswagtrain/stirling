#[allow(non_camel_case_types)]
#[derive(Debug, Copy, Clone)]
#[repr(u16)]
pub enum Instr {
    I32_Const(u32, i32),
    I32_Mov(u32, u32),
    I32_Neg(u32, u32),
    I32_Not(u32, u32),
    I32_Eq(u32, u32, u32),
    I32_NotEq(u32, u32, u32),
    I32_Add(u32, u32, u32),
    I32_Sub(u32, u32, u32),
    I32_Mul(u32, u32, u32),
    I32_Or(u32, u32, u32),
    I32_And(u32, u32, u32),
    I32_Xor(u32, u32, u32),
    I32_ShiftL(u32, u32, u32),
    I32_S_Lt(u32, u32, u32),
    I32_S_LtEq(u32, u32, u32),
    I32_S_Div(u32, u32, u32),
    I32_S_Rem(u32, u32, u32),
    I32_S_ShiftR(u32, u32, u32),
    I32_U_Lt(u32, u32, u32),
    I32_U_LtEq(u32, u32, u32),
    I32_U_Div(u32, u32, u32),
    I32_U_Rem(u32, u32, u32),
    I32_U_ShiftR(u32, u32, u32),

    I64_Const(u32, i64),
    I64_Mov(u32, u32),
    I64_Neg(u32, u32),
    I64_Not(u32, u32),
    I64_Eq(u32, u32, u32),
    I64_NotEq(u32, u32, u32),
    I64_Add(u32, u32, u32),
    I64_Sub(u32, u32, u32),
    I64_Mul(u32, u32, u32),
    I64_Or(u32, u32, u32),
    I64_And(u32, u32, u32),
    I64_Xor(u32, u32, u32),
    I64_ShiftL(u32, u32, u32),
    I64_S_Lt(u32, u32, u32),
    I64_S_LtEq(u32, u32, u32),
    I64_S_Div(u32, u32, u32),
    I64_S_Rem(u32, u32, u32),
    I64_S_ShiftR(u32, u32, u32),
    I64_U_Lt(u32, u32, u32),
    I64_U_LtEq(u32, u32, u32),
    I64_U_Div(u32, u32, u32),
    I64_U_Rem(u32, u32, u32),
    I64_U_ShiftR(u32, u32, u32),

    I64_S_Widen_32(u32, u32),
    I64_U_Widen_32(u32, u32),

    Jump(i32),
    JumpF(i32, u32),

    Return,
    Bad,

    BuiltIn_print_i64(u32),
    BuiltIn_print_u64(u32),
    BuiltIn_print_bool(u32),
}
